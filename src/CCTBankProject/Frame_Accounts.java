/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CCTBankProject;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.*;
import net.proteanit.sql.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javafx.application.Platform.exit;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

public class Frame_Accounts extends javax.swing.JFrame {

    Connection con = null;
    ResultSet rs = null;
    PreparedStatement pst = null;

    public Frame_Accounts() {
        initComponents();
        fetch();
        setLocationRelativeTo(null);
        setSize(800, 450);
    }

    public void transactionsList() {
        try {
            ArrayList<AccountVar> transactionsList = new ArrayList<>();
            AccountVar acc = new AccountVar();
            acc.getaccountdata(acc);
        } catch (Exception ex) {
            Logger.getLogger(Frame_Accounts.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void fetch() {
        try {
            Connection con = DBMethods.getConnection();
            pst = con.prepareStatement("SELECT id, firstname, lastname, accountnumber, sortcode, balance FROM newacc");
            rs = pst.executeQuery();
        } catch (Exception e) {
            System.out.println(e);
        }
        // JOptionPane.showMessageDialog(null, new BankAccountData(),"",3,null);
        table_AccountData.setModel(DbUtils.resultSetToTableModel(rs));
        // JOptionPane.showMessageDialog(this, "Retrieved");
    }

    public void fetchTransactions() {
        try {
            Connection con = DBMethods.getConnection();
            pst = con.prepareStatement("SELECT * FROM transactions");
            rs = pst.executeQuery();
        } catch (Exception e) {
            System.out.println(e);
        }
        table_AccountData.setModel(DbUtils.resultSetToTableModel(rs));
    }

    public void Update_table() {
        try {
            String sql = "SELECT id, firstname, lastname, accountnumber, sortcode, balance FROM newacc";
            Connection con = DBMethods.getConnection();
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            table_AccountData.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_AccountData = new javax.swing.JTable();
        jButton_Accounts = new javax.swing.JButton();
        jButton_Transactions = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem_Create = new javax.swing.JMenuItem();
        jMenuItem_Delete = new javax.swing.JMenuItem();
        jMenuItem_EditAccount = new javax.swing.JMenuItem();
        jMenuItem_Transfer = new javax.swing.JMenuItem();
        jMenuItem_Withdraw = new javax.swing.JMenuItem();
        jMenuItem_Deposit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Accounts");

        table_AccountData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "first name", "last name", "account number", "sort code", "initial balance"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_AccountData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_AccountDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_AccountData);
        if (table_AccountData.getColumnModel().getColumnCount() > 0) {
            table_AccountData.getColumnModel().getColumn(0).setPreferredWidth(30);
            table_AccountData.getColumnModel().getColumn(0).setMaxWidth(30);
        }

        jButton_Accounts.setText("Accounts");
        jButton_Accounts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AccountsActionPerformed(evt);
            }
        });

        jButton_Transactions.setText("Transactions");
        jButton_Transactions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_TransactionsActionPerformed(evt);
            }
        });

        jMenu1.setText("File");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuItemExit.setText("Exit");
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem_Create.setText("Create Account");
        jMenuItem_Create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_CreateActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem_Create);

        jMenuItem_Delete.setText("Delete Account");
        jMenuItem_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_DeleteActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem_Delete);

        jMenuItem_EditAccount.setText("Edit Account");
        jMenuItem_EditAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_EditAccountActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem_EditAccount);

        jMenuItem_Transfer.setText("Transfer Funds");
        jMenuItem_Transfer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_TransferActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem_Transfer);

        jMenuItem_Withdraw.setText("Withdraw Funds");
        jMenuItem_Withdraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_WithdrawActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem_Withdraw);

        jMenuItem_Deposit.setText("Deposit Funds");
        jMenuItem_Deposit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_DepositActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem_Deposit);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 759, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton_Transactions)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_Accounts)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_Accounts)
                    .addComponent(jButton_Transactions))
                .addContainerGap(113, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem_CreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_CreateActionPerformed
        Frame_CreateAccount newFrame = new Frame_CreateAccount();
        newFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem_CreateActionPerformed

    private void jMenuItem_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_DeleteActionPerformed
        int row;
        row = table_AccountData.getSelectedRow();
        String value = table_AccountData.getModel().getValueAt(row, 0).toString();
        String str = value.replace("[^0-9]+", " ");
        int id = Integer.parseInt(str);
        //JOptionPane.showMessageDialog(null, id);
        try {
            DBMethods.DeleteAccount(id);
        } catch (Exception ex) {
            Logger.getLogger(Frame_Accounts.class.getName()).log(Level.SEVERE, null, ex);
        }
        table_AccountData.addNotify();
        table_AccountData.validate();
        Update_table();
    }//GEN-LAST:event_jMenuItem_DeleteActionPerformed

    private void table_AccountDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_AccountDataMouseClicked

    }//GEN-LAST:event_table_AccountDataMouseClicked

    private void jMenuItem_TransferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_TransferActionPerformed
        int row = table_AccountData.getSelectedRow();

        Frame_Transfer newFrame2 = new Frame_Transfer();

        TableModel model = table_AccountData.getModel();

        String accnumber = model.getValueAt(row, 3).toString();
        String sortcode = model.getValueAt(row, 4).toString();
        String balance = model.getValueAt(row, 5).toString();

        newFrame2.setVisible(true);
        //newFrame2.pack();

        newFrame2.AccNumber_TextField.setText(accnumber);
        newFrame2.Sortcode_TextField.setText(sortcode);
        newFrame2.Initialbalance_TextField.setText(balance);

        try {
            // this.dispose();
        } catch (Exception ex) {
            Logger.getLogger(Frame_Accounts.class.getName()).log(Level.SEVERE, null, ex);
        }
        table_AccountData.addNotify();
        table_AccountData.validate();
        Update_table();
    }//GEN-LAST:event_jMenuItem_TransferActionPerformed

    private void jMenuItem_EditAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_EditAccountActionPerformed
        int row = table_AccountData.getSelectedRow();
        AccountVar acc = new AccountVar();
        //Update_table();
        Frame_EditAccount newFrame3 = new Frame_EditAccount();

        TableModel model = table_AccountData.getModel();
        String value = model.getValueAt(row, 0).toString();

        int id = Integer.parseInt(value);
        acc.setId(id);

        try {
            acc.getaccountdata(acc);
            new Frame_EditAccount(acc).setVisible(true);

            //JOptionPane.showMessageDialog(this, "ID: " + value);
        } catch (Exception ex) {
            this.dispose();

            Logger.getLogger(Frame_Accounts.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem_EditAccountActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed

    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
        this.dispose();
    }//GEN-LAST:event_jMenuItemExitActionPerformed

    private void jMenuItem_WithdrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_WithdrawActionPerformed
        int row = table_AccountData.getSelectedRow();
        int column = table_AccountData.getSelectedColumn();

        AccountVar acc = new AccountVar();

        if ((row != -1) && (column != -1)) {
            String value = table_AccountData.getModel().getValueAt(row, 0).toString();
            int id = Integer.parseInt(value);
            acc.setId(id);

            try {/*in try block acc.getData*/
                acc.getaccountdata(acc);
                this.dispose();
                new Frame_Withdraw(acc).setVisible(true);
            } catch (Exception ex) {
            }
        }
    }//GEN-LAST:event_jMenuItem_WithdrawActionPerformed

    private void jMenuItem_DepositActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_DepositActionPerformed
        int row = table_AccountData.getSelectedRow();
        int column = table_AccountData.getSelectedColumn();

        AccountVar acc = new AccountVar();

        if ((row != -1) && (column != -1)) {
            String value = table_AccountData.getModel().getValueAt(row, 0).toString();
            int id = Integer.parseInt(value);
            acc.setId(id);

            try {/*in try block acc.getData*/
                acc.getaccountdata(acc);
                this.dispose();
                new Frame_Deposit(acc).setVisible(true);
            } catch (Exception ex) {
            }
        }
    }//GEN-LAST:event_jMenuItem_DepositActionPerformed

    private void jButton_TransactionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_TransactionsActionPerformed
        fetchTransactions();
    }//GEN-LAST:event_jButton_TransactionsActionPerformed

    private void jButton_AccountsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AccountsActionPerformed
        fetch();
    }//GEN-LAST:event_jButton_AccountsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame_Accounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame_Accounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame_Accounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame_Accounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame_Accounts().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Accounts;
    private javax.swing.JButton jButton_Transactions;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JMenuItem jMenuItem_Create;
    private javax.swing.JMenuItem jMenuItem_Delete;
    private javax.swing.JMenuItem jMenuItem_Deposit;
    private javax.swing.JMenuItem jMenuItem_EditAccount;
    private javax.swing.JMenuItem jMenuItem_Transfer;
    private javax.swing.JMenuItem jMenuItem_Withdraw;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable table_AccountData;
    // End of variables declaration//GEN-END:variables

}
